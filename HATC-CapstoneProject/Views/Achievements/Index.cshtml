@model List<Achievement>
@using Microsoft.AspNetCore.Identity
@using HATC_CapstoneProject.Data
@inject SignInManager<Player> signInManager

@{
	ViewData["Title"] = "Index";
	List<Achievement> incomplete = Model.Where(achievement => !achievement.IsUnlocked).ToList();
	List<Achievement> completed = Model.Where(achievement => achievement.IsUnlocked).ToList();
}

<h1>Achievements</h1>

<div class="d-flex align-items-start">
	<div class="nav flex-column nav-pills me-3 bg-light hatc-blue" id="achievement-tab" role="tablist" aria-orientation="vertical">

		<button class="nav-link active" id="achievement-tab-incomplete" data-bs-toggle="pill" href="#achievement-info-incomplete" type="button" role="tab" aria-controls="v-pills-home" aria-selected="false">
			Incomplete
		</button>
		<button class="nav-link" id="achievement-tab-completed" data-bs-toggle="pill" href="#achievement-info-completed" type="button" role="tab" aria-controls="v-pills-home" aria-selected="false">
			Complete
		</button>
		@if (signInManager.IsSignedIn(User) && User.IsInRole("DM"))
		{
			<div class="align-bottom mx-auto d-flex">
				<a asp-action="Create" class="btn btn-success rounded">
					Add an Achievement
				</a>
			</div>
		}
	</div>
	<div class="tab-content col-lg-10" id="v-pills-tabContent">
		<!-- Incomplete achievements-->
		<div class="tab-pane fade show active" id="achievement-info-incomplete" role="tabpanel" aria-labelledby="achievement-tab-incomplete">
			@foreach (Achievement achievement in incomplete)
			{
				<div class="container col-12 border-0" style="border-color: @achievement.Level.BgColor" id="@achievement.Name.Replace(" ","")">

					<div class="col-12 border-2 rounded-top" id="@achievement.Name.Replace(" ","")Head" style="background-color: @achievement.Level.BgColor; color: @achievement.Level.Color">
						<div class="row align-middle">

							<h3 class="col m-2">
								@achievement.Name
							</h3>

							<h3 class="col text-end m-2">

								@achievement.Level.Name
							</h3>
						</div>
					</div>
					<div id="@achievement.Name.Replace(" ","")Body" class="border">
						<div class="">
							<div class="row">
								<div class="col m-2">
									<div>
										@if (achievement.IsMasked)
										{
											@if (signInManager.IsSignedIn(User) && User.IsInRole("DM"))
											{
												@achievement.Benefit
											}
											else
											{
												@StringRandomizer.RandomStr(achievement.Benefit);
											}
										}
										else
										{
											@achievement.Benefit
										}

									</div>

								</div>
								<div class="col m-2">
									@foreach (AchievementProgress ap in achievement.AchievementProgress)
									{

										int progress = (int)((double)ap.Progress / (double)ap.Goal * 100);

										string color;
										string text;
										if (ap.Progress == ap.Goal)
										{
											color = "bg-success";
											text = "text-light";
										}
										else
										{
											color = "bg-info";
											text = "text-dark";
										}


										<div class="col">
											@if (achievement.IsMasked)
										{
											@if (signInManager.IsSignedIn(User) && User.IsInRole("DM"))
											{
													@ap.Criteria
											}
											else
											{
													@StringRandomizer.RandomStr(ap.Criteria);
											}
										}
										else
										{
												@ap.Criteria
										}
											
										</div>
										<div class="progress position-relative">
											<div class="progress-bar @color col-12" style="width: @progress%" role="progressbar" aria-valuenow="@ap.Progress" aria-valuemin="0" aria-valuemax="@ap.Goal">
											</div>
											<small class="justify-content-center d-flex position-absolute w-100 @text">@ap.Progress / @ap.Goal</small>

										</div>
									}
									@if (signInManager.IsSignedIn(User) && User.IsInRole("DM"))
									{
										<button class="btn btn-secondary float-end m-1" asp-action="Edit" asp-route-id="@achievement.Id">Edit</button>
									}
								</div>
							</div>
						</div>

					</div>
				</div>
				<br />
			}
		</div>
		<!-- Completed achievements-->
		<div class="tab-pane fade" id="achievement-info-completed" role="tabpanel" aria-labelledby="achievement-tab-completed">
			@foreach (Achievement achievement in completed)
			{
				<div class="container col-12 border-0" style="border-color: @achievement.Level.BgColor" id="@achievement.Name.Replace(" ","")">

					<div class="col-12 border-2 rounded-top" id="@achievement.Name.Replace(" ","")Head" style="background-color: @achievement.Level.BgColor; color: @achievement.Level.Color">
						<div class="row align-middle">

							<h3 class="col m-2">
								@achievement.Name
							</h3>

							<h3 class="col text-end m-2">

								@achievement.Level.Name
							</h3>
						</div>
					</div>
					<div id="@achievement.Name.Replace(" ","")Body" class="border">
						<div class="">
							<div class="row">
								<div class="col m-2">
									<div>
										@if (achievement.IsMasked)
										{
											@if (signInManager.IsSignedIn(User) && User.IsInRole("DM"))
											{
												@achievement.Benefit
											}
											else
											{
												@StringRandomizer.RandomStr(achievement.Benefit);
											}
										}
										else
										{
											@achievement.Benefit
										}

									</div>

								</div>
								<div class="col m-2">
									@foreach (AchievementProgress ap in achievement.AchievementProgress)
									{

										int progress = (int)((double)ap.Progress / (double)ap.Goal * 100);

										string color;
										string text;
										if (ap.Progress == ap.Goal)
										{
											color = "bg-success";
											text = "text-light";
										}
										else
										{
											color = "bg-info";
											text = "text-dark";
										}


										<div class="col">
											@if (achievement.IsMasked)
											{
												@if (signInManager.IsSignedIn(User) && User.IsInRole("DM"))
												{
													@ap.Criteria
												}
												else
												{
													@StringRandomizer.RandomStr(ap.Criteria);
												}
											}
											else
											{
												@ap.Criteria
											}

										</div>
										<div class="progress position-relative">
											<div class="progress-bar @color col-12" style="width: @progress%" role="progressbar" aria-valuenow="@ap.Progress" aria-valuemin="0" aria-valuemax="@ap.Goal">
											</div>
											<small class="justify-content-center d-flex position-absolute w-100 @text">@ap.Progress / @ap.Goal</small>

										</div>
									}
									@if (signInManager.IsSignedIn(User) && User.IsInRole("DM"))
									{
										<button class="btn btn-secondary float-end m-1" asp-action="Edit" asp-route-id="@achievement.Id">Edit</button>
									}
								</div>
							</div>
						</div>

					</div>
				</div>
				<br />
			}
		</div>
	</div>
</div>

@*<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsHidden)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Benefit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Criteria)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Goal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Progress)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsHidden)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Benefit)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Criteria)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Goal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Progress)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>*@