@model IEnumerable<HATC_CapstoneProject.Models.ShopItem>
@{
	ViewData["Title"] = "Index";
}



<h1>Shop and Crafting</h1>

@if (signInManager.IsSignedIn(User) && User.IsInRole("DM"))
{
	<p>
		<Button class="btn btn-success" asp-action="Create">Create New</Button>
	</p>
}
<div id="search">
	<input id="search" />
</div>
<table class="table table-striped">
	<thead>
		<tr>
			<th>
				Item Name
			</th>
			<th>
				Item Cost
			</th>
			<th>
				Crafting Cost
			</th>
			<th>
				Price Adjustment
			</th>
			<th>
				Shoppable
			</th>
			<th>
				Craftable
			</th>
			<th>
				Attunement
			</th>
			<th>
				Rarity
			</th>
			<th>
				Source
			</th>
			@if (signInManager.IsSignedIn(User) && User.IsInRole("DM"))
			{
				<th></th>
			}
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			int crafting = item.Value / 2;
			<tr>
				<td>
					@item.Name
				</td>
				<td>
					@if (item.Value == 0)
					{
						<strong>-</strong>
					}
					else
					{
						@item.Value.ToString("#,##0")
					}
				</td>
				<td>
					@if (item.Value == 0)
					{
						<strong>-</strong>
					}
					else
					{
						@crafting.ToString("#,##0")
					}
				</td>
				<td>
					@item.PriceAdjustment
				</td>

				@if (item.isShoppable)
				{
					<td class="text text-success">
						Yes
					</td>
				}
				else
				{
					<td class="text text-danger">
						No
					</td>
				}

				@if (item.isCraftable)
				{
					<td class="text text-success">
						Yes
					</td>
				}
				else
				{
					<td class="text text-danger">
						No
					</td>
				}

				@if (item.isAttunement)
				{
					<td class="text text-success">
						Yes
					</td>
				}
				else
				{
					<td class="text text-danger">
						No
					</td>
				}

				<td style="background-color: @item.Rarity.BgColor; color: @item.Rarity.Color">
					@item.Rarity.Name
				</td>
				<td>
					@item.Source
				</td>
				@if (signInManager.IsSignedIn(User) && User.IsInRole("DM"))
				{
					<td>
						<button asp-action="Edit" asp-route-id="@item.Id">Edit</button>
					</td>
				}
			</tr>
		}
	</tbody>
</table>

<script>

	const shop = @Html.Raw(Json.Serialize(Model));
	const searchInput = document.getElementById('search');
	searchInput.onkeyup = searchArray();

	console.log(searchInput);
	console.log(shop);

	function searchArray() {
		let arrOut = new Array;
		let s = searchInput.value;
		console.log(s);
		console.log(searchInput.value);
		for (let item of shop) {
			if (item.name.toLowerCase().includes(s)) {
				arrOut.push(item);
			}
		}
		console.log(arrOut);
		return arrOut;
	}

</script>