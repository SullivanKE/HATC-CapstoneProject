@model IEnumerable<HATC_CapstoneProject.Models.Downtime>

@{
	ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
	<a asp-action="Create">Create New</a>
</p>

<div class="d-flex align-items-start">
	<div class="nav flex-column nav-pills me-3" id="downtime-tab" role="tablist" aria-orientation="vertical">
		@foreach (var item in Model)
		{
			<button class="nav-link" id="downtime-tab-@item.Name.Replace(" ","")" data-bs-toggle="pill" href="#downtime-info-@item.Name.Replace(" ","")" type="button" role="tab" aria-controls="v-pills-home" aria-selected="false">
				@Html.DisplayFor(modelItem => item.Name)
			</button>
		}
	</div>
	<div class="tab-content col-lg-10" id="v-pills-tabContent">

		@foreach (var item in Model)
		{
			<div class="tab-pane fade" id="downtime-info-@item.Name.Replace(" ","")" role="tabpanel" aria-labelledby="downtime-tab-@item.Name.Replace(" ","")">

				@if (item.Achievements != null && item.Achievements.Any())
				{
					<table class="table table-striped table-hover">
						<thead>
							<th>
								Achievement Benefits
							</th>
						</thead>
						<tbody>
							@foreach (var downtimeInfo in @item.Achievements)
							{
								<tr>
									<td class="fw-bold">
										@downtimeInfo.Name
									</td>
									<td>
										@downtimeInfo.Benefit
									</td>
								</tr>
							}
						</tbody>
					</table>
					<br />
				}

				<table class="table table-striped table-hover">
					<thead>
						<th>
							Resources
						</th>
					</thead>
					<tbody>

						@if (item.Resources != null && item.Resources.Any())
						{
							@foreach (var downtimeInfo in @item.Resources)
							{
								<tr>
									<td>
										@downtimeInfo.Item
									</td>
								</tr>
							}
						}
					</tbody>

				</table>
				<br />
				<table class="table table-striped table-hover">
					<thead>
						<th>
							Resolution
						</th>
					</thead>
					<tbody>
						@if (item.Resolution != null && item.Resolution.Any())
						{
							@foreach (var downtimeInfo in @item.Resolution)
							{
								<tr>
									<td>
										@downtimeInfo.Item
									</td>
								</tr>
							}
						}
					</tbody>

				</table>
				<br />
				@if (item.Tables != null && item.Tables.Any())
				{
					foreach (var t in item.Tables)
					{
						<h3 class="fw-bolder col-12 mx-auto">@t.Name</h3>
						<table class="table table-striped table-hover">
							@{
								bool headCheck = false;
							}
							@foreach (DowntimeTableRow outer in t.Table)
							{
								@if (t.HasHead && !headCheck)
								{
									headCheck = true;
									<thead class="thead-light">
										<tr>
											@foreach (StringListItem inner in outer.Row)
											{

												<th>
													@inner.Item
												</th>
											}
										</tr>
									</thead>
								}
								else
								{
									<tr>
										@foreach (StringListItem inner in outer.Row)
										{
											<td>
												@inner.Item
											</td>
										}
									</tr>
								}
							}

						</table>
					}
				}

			</div>
		}
	</div>
</div>


@*<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
<a asp-action="Details" asp-route-id="@item.Id">Details</a> |
<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
@Html.DisplayFor(modelItem => item.Status)*@